package {{reverse-domain}}

import com.android.build.gradle.*
import java.io.File
import org.gradle.api.DefaultTask
import org.gradle.api.GradleException
import org.gradle.api.Project
import org.gradle.api.logging.LogLevel
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.TaskAction

open class BuildTask : DefaultTask() {
    @Input
    var appRootRel: String? = null
    @Input
    var target: String? = null
    @Input
    var release: Boolean? = null

    @TaskAction
    fun build() {
        val appRootRel = appRootRel
        if (appRootRel == null) {
            throw GradleException("appRootRel cannot be null")
        }
        val target = target
        if (target == null) {
            throw GradleException("target cannot be null")
        }
        val release = release
        if (release == null) {
            throw GradleException("release cannot be null")
        }
        project.exec {
            workingDir(File(project.getProjectDir(), appRootRel))
            executable("cargo")
            args(listOf("ginit", "android", "build"))
            if (project.logger.isEnabled(LogLevel.DEBUG)) {
                args("-vv")
            } else if (project.logger.isEnabled(LogLevel.INFO)) {
                args("-v")
            }
            if (release) {
                args("--release")
            }
            args("${target}")
        }.assertNormalExitValue()
    }
}
